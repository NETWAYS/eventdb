<?php



/**
 * BaseEventDbEvent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $host
 * @property blob $host_address
 * @property integer $type
 * @property integer $classification
 * @property string $program
 * @property string $message
 * @property integer $ack
 * @property timestamp $created
 * @property timestamp $modified
 * @property Doctrine_Collection $EventDbComments
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEventDbEvent extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('event');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
       $this->hasColumn('priority', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'autoincrement' => false,
        ));
	   $this->hasColumn('facility', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'autoincrement' => false,
        ));
        $this->hasColumn('host_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('host_address', 'clob', 16, array(
             'type' => 'clob',
             'fixed' => false,
			 'length' => 16,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('type', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        
        $this->hasColumn('program', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('message', 'clob', 4096, array(
             'type' => 'clob',
             'length' => 4096,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ack', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('created', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('modified', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));

		$this->index('idx_main',array(
			'fields' => array('program','created','modified','priority','facility','ack','host_name','host_address','id')
		));
		// order indizes
		$this->index('idx_created',array(
			'fields' => array('created')
		));
		$this->index('idx_modified',array(
			'fields' => array('modified')
		));
		$this->index('idx_priority',array(
			'fields' => array('priority')
		));
		$this->index('idx_facility',array(
			'fields' => array('facility')
		));
		$this->index('idx_host_name',array(
			'fields' => array('host_name')
		));
		$this->index('idx_ack',array(
			'fields' => array('ack')
		));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('EventDbComments as comments', array(
             'local' => 'id', 
             'foreign' => 'event_id'));
    }
}
